# Security scanning and compliance checks workflow for Case Interview Practice Platform
# Addresses requirements from:
# - Section 8.3.6: Regular security scanning, vulnerability assessment, and dependency auditing
# - Section 8.3.5: Implementation of GDPR, PCI DSS, SOC 2, and CCPA security controls

name: Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Run weekly on Sunday at midnight
    - cron: '0 0 * * 0'

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  security_scan:
    name: Security Scan and Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install backend dependencies
        working-directory: src/backend
        run: |
          npm ci
          
      - name: Install frontend dependencies
        working-directory: src/web
        run: |
          npm ci

      # Initialize CodeQL Analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          queries: security-extended,security-and-quality

      # Run CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"
          upload: true

      # Setup and run Snyk scans
      - name: Setup Snyk
        uses: snyk/actions/setup@latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Backend Scan
        working-directory: src/backend
        run: snyk test --all-projects --severity-threshold=high
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Frontend Scan
        working-directory: src/web
        run: snyk test --all-projects --severity-threshold=high
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Run Trivy vulnerability scanner
      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@latest
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      # Upload scan results
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: trivy

      # Generate consolidated security report
      - name: Generate Security Report
        if: always()
        run: |
          echo "# Security Scan Results" > security-report.md
          echo "## Scan Time: $(date)" >> security-report.md
          echo "## CodeQL Results" >> security-report.md
          echo "See Security tab for detailed CodeQL results" >> security-report.md
          echo "## Snyk Results" >> security-report.md
          echo "Backend and frontend dependency scan results available in Snyk dashboard" >> security-report.md
          echo "## Trivy Results" >> security-report.md
          echo "See uploaded SARIF results for filesystem vulnerabilities" >> security-report.md

      # Upload security report as artifact
      - name: Upload Security Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            security-report.md
            trivy-results.sarif

      # Create GitHub issue for critical findings
      - name: Create Issue for Critical Findings
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Critical Security Vulnerabilities Detected',
              body: 'Critical security vulnerabilities were found during the security scan. Please review the security scan results in the Security tab and the uploaded artifacts.',
              labels: ['security', 'critical']
            });

      # Compliance check summary
      - name: Generate Compliance Report
        if: always()
        run: |
          echo "# Compliance Check Summary" > compliance-report.md
          echo "## Scan Time: $(date)" >> compliance-report.md
          echo "## Compliance Standards Checked" >> compliance-report.md
          echo "- GDPR" >> compliance-report.md
          echo "- PCI DSS" >> compliance-report.md
          echo "- SOC 2" >> compliance-report.md
          echo "- CCPA" >> compliance-report.md

      # Upload compliance report
      - name: Upload Compliance Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: compliance-report
          path: compliance-report.md

      # Fail workflow if critical vulnerabilities found
      - name: Check for Critical Vulnerabilities
        if: failure()
        run: |
          echo "Critical security vulnerabilities were found. Please review the security reports."
          exit 1